import { useState } from "react";
import { api } from "../utils/api";

interface Trade {
  id: number;
  // ...
}

export default function TradeAdvancedFilter() {
  // States for form
  const [fromDate, setFromDate] = useState("");
  const [toDate, setToDate] = useState("");
  const [instrument, setInstrument] = useState("");
  const [pattern, setPattern] = useState("");
  const [direction, setDirection] = useState("");
  const [trades, setTrades] = useState<Trade[]>([]);

  const handleSearch = async () => {
    const token = localStorage.getItem("token");
    if (!token) return;

    try {
      const params = new URLSearchParams();
      if (fromDate) params.append("from", fromDate);
      if (toDate) params.append("to", toDate);
      if (instrument) params.append("instrument", instrument);
      if (pattern) params.append("pattern", pattern);
      if (direction) params.append("direction", direction);

      // GET /trades/search?from=...&to=...&instrument=...etc
      const response = await api.get(`/trades/search?${params.toString()}`, {
        headers: { Authorization: `Bearer ${token}` },
      });
      setTrades(response.data);
    } catch (error) {
      console.error("Failed to search trades.", error);
    }
  };

  return (
    <div className="p-4 max-w-xl mx-auto">
      <h1 className="text-2xl font-bold mb-4">Advanced Trade Filter</h1>

      {/* From date */}
      <div className="mb-2">
        <label>From Date:</label>
        <input
          type="date"
          className="p-2 border rounded w-full"
          value={fromDate}
          onChange={(e) => setFromDate(e.target.value)}
        />
      </div>

      {/* To date */}
      <div className="mb-2">
        <label>To Date:</label>
        <input
          type="date"
          className="p-2 border rounded w-full"
          value={toDate}
          onChange={(e) => setToDate(e.target.value)}
        />
      </div>

      {/* Instrument */}
      <div className="mb-2">
        <label>Instrument:</label>
        <input
          type="text"
          className="p-2 border rounded w-full"
          placeholder="e.g. EURUSD"
          value={instrument}
          onChange={(e) => setInstrument(e.target.value)}
        />
      </div>

      {/* Pattern */}
      <div className="mb-2">
        <label>Pattern:</label>
        <input
          type="text"
          className="p-2 border rounded w-full"
          value={pattern}
          onChange={(e) => setPattern(e.target.value)}
        />
      </div>

      {/* Direction */}
      <div className="mb-2">
        <label>Direction:</label>
        <select
          className="p-2 border rounded w-full"
          value={direction}
          onChange={(e) => setDirection(e.target.value)}
        >
          <option value="">Any</option>
          <option value="Long">Long</option>
          <option value="Short">Short</option>
        </select>
      </div>

      <button
        onClick={handleSearch}
        className="w-full bg-blue-600 text-white py-2 rounded mt-4"
      >
        Search
      </button>

      {/* Results */}
      <h2 className="text-lg font-semibold mt-6">Results</h2>
      <table className="w-full mt-2 border border-collapse">
        <thead>
          <tr className="bg-gray-100">
            {/* table headers */}
          </tr>
        </thead>
        <tbody>
          {trades.map((t) => (
            <tr key={t.id}>
              {/* display columns */}
            </tr>
          ))}
        </tbody>
      </table>
    </div>
  );
}
